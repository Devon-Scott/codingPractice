#include <iostream>
#include <string>

using namespace std;

int parseChar(char c){
    switch (c){
        case 'I': return 1; break;
        case 'V': return 5; break;
        case 'X': return 10; break;
        case 'L': return 50; break;
        case 'C': return 100; break;
        case 'D': return 500; break;
        case 'M': return 1000; break;
    }
    return -1;
}

int romanToInt(string s){
    int length = s.length();
    int result = 0;
    for (int i = 0; i < length; i++){
        char temp = s[i];
        std::cout << temp << std::endl;
        int value;
        if (temp == 'I' && i + 1 < length){
            if (s[i + 1] == 'V'){
                value = 4;
                i++;
            }
            else if (s[i + 1] == 'X'){
                value = 9;
                i++;
            }
        } else if (temp == 'X' && i + 1 < length) {
            if (s[i + 1] == 'L'){
                value = 40;
                i++;
            }
            else if (s[i + 1] == 'C'){
                value = 90;
                i++;
            }
        } else if (temp == 'C' && i + 1 < length){
            if (s[i + 1] == 'D'){
                value = 400;
                i++;
            }
            else if (s[i + 1] == 'M'){
                value = 900;
                i++;
            }
        } else {
            value = parseChar(temp);
        }
        result += value;
        std::cout << result << std::endl;
    }
    return result;
}

int main(){
    // Test data generated by chatGPT
    std::string romanNumerals[] = {"MCMXCIV", "CDXLIV", "DCCCXC", "XCIX", "MMMCMXC", "CMXC", "CCXLV", "DLV", "MMMCDXII", "XLIV", "CCX", "MMMCCXXX", "MDCCCLXXXVIII", "CXL", "MMMCM"};
    int integerValues[] = {1994, 444, 890, 99, 3990, 990, 245, 555, 3412, 44, 210, 2230, 1888, 140, 3900};
    for (int i = 0; i < 15; i++){
        int result = romanToInt(romanNumerals[i]);
        if (result != integerValues[i]){
            std::cout << "Test " << i << " Failed" << std::endl;
            std::cout << "Test = " << integerValues[i] << std::endl;
            std::cout << "Result = " << result << std::endl;
        }
    }
}